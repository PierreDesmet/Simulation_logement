"""
Simulateur du montant que pourra co√ªter notre futur logement √† Lisa et moi

$ source /Users/pierredesmet/miniconda3/envs/pierrou_env/bin/activate
$ streamlit run app.py

R√©flexion sur le PEL, pour un souscription en janvier 2024 :
    Taux **d'int√©r√™t** du compte = 2.25 %
    Taux du **pr√™t** : 3.45 %
    Pour √™tre int√©ressant, le PEL doit avoir un taux plus int√©ressant que
    le taux BNP au moment de l'achat. On a :
      taux_emprunt_BNP ~ 0.7 * taux_nominal_public, et
      taux_emprunt_PEL = 0.0345
    Donc pour que le PEL soit int√©ressant, il faut qu'au moment de l'achat :
    taux_nominal_public > 0.0345 / 0.7, c√†d que le taux nominal public d√©passe le 4.93 %...
    ce qui est tr√®s rarement arriv√© :
    https://www.lesfurets.com/pret-immobilier/barometre-taux/votre-taux)

Sources :
- https://www.salaire-brut-en-net.fr
- https://www.service-public.fr/particuliers/vosdroits/F2456
- https://www.meilleurtaux.com/credit-immobilier/barometre-des-taux.html
- https://www.human-immobilier.fr/content/pdf/bareme_honoraires_human_immobilier.pdf
- https://fr.luko.eu/conseils/guide/taux-endettement-maximum/
- https://app.dvf.etalab.gouv.fr
- PEL : https://www.service-public.fr/particuliers/vosdroits/F16140
"""
import datetime

import numpy as np
import pandas as pd
import streamlit as st
from PIL import Image

from fonctions import (
    INFLATION_SUR_NB_YEARS, TAUX_BNP, TAUX_NOMINAL_PUBLIC, TAUX_PEL, bar√™me, get_CRD_√†_date,
    get_mt_emprunt_max, get_mt_max_pr√™t_PEL, img_to_bytes, LIEU_TO_INFLATION_APPART,
    LIEU_TO_INFLATION_MAISON, lieu_to_url_meilleurs_agents, nb_mois_depuis_que_lisa_√©conomise,
    sep_milliers, get_inflation_annuelle, projette_prix_inflate
)

# Hypoth√®ses
SECURITE_LISA = 10_000

# Appartement actuel √† Cachan
TX_LBP = 0.9
DATE_D√âBUT_DU_PR√äT_EXISTANT = datetime.date(2020, 5, 5)
MONTANT_REMBOURS√â_PAR_MOIS = 878.19
CHARGES_MENSUELLES = 200
PRIX_APPARTEMENT_CACHAN = 259_000
MONTANT_EMPRUNTE = 192_820
ASSURANCE_PR√äT = 16

# "Le taux maximum d'endettement ne peux exc√©der 35 % des revenus des emprunteurs,
# assurance comprise"
TAUX_MAX_ENDETTEMENT = 0.35  # assurance comprise
# "Depuis le 1er janvier 2022, les banques doivent limiter √† 25 ans la dur√©e
# des cr√©dits immobiliers"
DUR√âE_MAX_CR√âDIT_EN_MOIS = 25 * 12

PARTICIPATION = 3697  # montant pour 2024
INTERESSEMENT = 3460  # montant pour 2024
PARTICIPATION_INTERESSEMENT = PARTICIPATION + INTERESSEMENT
W_TOTAL_AVANT_IMP√îT = (67_000 + 5000 + 12_000) * (63_000 / 84_000)  # hors PI et abondemment
W_VARIABLE_AVANT_IMP√îT = 12_000 * (63_000 / 84_000)  # https://www.salaire-brut-en-net.fr


st.set_page_config(
    page_title='Estimation logement',
    page_icon=Image.open("logo.png")
)

titre = st.empty()


@st.cache_data()
def md_from_title_and_img(title: str, img_path: str):
    img64 = img_to_bytes(img_path)
    size = 28 if img_path != 'tirelire.png' else 35
    width = f'width={size} height={size}'
    return f"""## <img src='data:image/png;base64,{img64}' class='img-fluid' {width}> ¬†{title}"""


st.sidebar.markdown(
    md_from_title_and_img("Type d'appartement", 'logo.png'),
    unsafe_allow_html=True
)

select_ville = st.sidebar.selectbox(
    'Ville', sorted(LIEU_TO_INFLATION_MAISON.keys()),
    index=sorted(LIEU_TO_INFLATION_MAISON).index('RUEIL-MALMAISON')
)
select_appart_ou_maison = st.sidebar.selectbox(
    'Appartement ou maison', ['Maison', 'Appartement']
)
select_neuf_ancien = st.sidebar.selectbox('Neuf ou ancien', ['Ancien', 'Neuf'])
select_date_achat = st.sidebar.date_input('Date achat futur logement', datetime.date(2029, 1, 1))
titre.header("üè† ¬†Estimation logement " + str(select_date_achat.year))

st.sidebar.markdown(
    md_from_title_and_img("Emprunt", 'bnp-paribas.jpg'),
    unsafe_allow_html=True
)
select_avec_vente_appartement = st.sidebar.checkbox(
    "Avec vente appartement de Cachan", True
)
select_avec_cr√©dit_BNP = st.sidebar.checkbox("Avec taux avantageux BNP", True)
select_prise_en_compte_du_variable = st.sidebar.checkbox("Avec prise en compte du variable", True)
select_prise_en_compte_participation_interessement = st.sidebar.checkbox(
    "Avec prise en compte de la participation et de l'int√©ressement", False
)
# Une fois r√©volu le 7e anniversaire suivant la date de signature de la pr√©sente offre,
# l'Emprunteur peut effectuer des remboursements par anticipation, sans frais
remb_anticip√©_gratuit = (DATE_D√âBUT_DU_PR√äT_EXISTANT + pd.DateOffset(years=7)).date()
remb_anticip√©_gratuit = select_date_achat > remb_anticip√©_gratuit
select_remb_anticip√©_gratuit = st.sidebar.checkbox(
    "Avec clause de remboursement anticip√©e gratuite", value=remb_anticip√©_gratuit
)

select_nb_ann√©es_pr_rembourser = st.sidebar.slider(
    "Nombre d'ann√©es pour rembourser le cr√©dit",
    min_value=15, max_value=25, value=20, step=5
)

if select_avec_cr√©dit_BNP:
    l√©gende = 'Taux nominal BNP en %'
    default = TAUX_BNP[select_nb_ann√©es_pr_rembourser] * 100
else:
    l√©gende = (
        "[Taux nominal public en %]"
        "(https://www.meilleurtaux.com/credit-immobilier/barometre-des-taux.html)"
    )
    default = TAUX_NOMINAL_PUBLIC[select_nb_ann√©es_pr_rembourser] * 100
select_tx_nominal = st.sidebar.slider(
    l√©gende, 1., 5., default, step=0.05  # "Bon taux"
    # source : https://www.meilleurtaux.com/credit-immobilier/barometre-des-taux.html
)
tx_nominal = select_tx_nominal / 100
est_PEL_int√©ressant = TAUX_PEL <= tx_nominal

if est_PEL_int√©ressant:
    # % de mon endettement allou√© au PEL par opposition au pr√™t principal :
    curseur_PEL = st.sidebar.slider('curseur_PEL', 0., 1., 0., step=0.01)
    select_mt_int√©r√™ts_acquis_pel = st.sidebar.number_input(
        'Montant des int√©r√™t acquis PEL',
        value=int(0.0225 * 20000 + 0.0225 * 35000 + 0.0225 * 52000 + 0.0225 * 60000),
        step=100
    )
else:
    curseur_PEL = 0  # par d√©faut, on n'utilise pas le PEL
    mensualit√©_PEL = 0
    mt_pr√™t_PEL = 0
    dur√©e_du_pr√™t_PEL = 0

select_tx_frais_agence = st.sidebar.slider(
    "[Frais d'agence en %]"
    "(https://www.human-immobilier.fr/content/pdf/bareme_honoraires_human_immobilier.pdf)",
    0.0, 7.0, 6.0, step=0.5
)
select_tx_frais_agence /= 100

st.sidebar.markdown(
    md_from_title_and_img("Apports", 'tirelire.png'),
    unsafe_allow_html=True
)
select_avec_projection_inflation = st.sidebar.checkbox(
    f"Avec projection d'inflation sur {INFLATION_SUR_NB_YEARS} ans", True
)
select_gain_mensuel_pde = st.sidebar.slider(
    'Gain mensuel Pierre',
    min_value=1000, max_value=2500, value=1800, step=100
)

select_gain_mensuel_lvo = st.sidebar.slider(
    'Gain mensuel Lisa',
    min_value=1000, max_value=2500, value=2200, step=100
)
select_apport_actuel_pde = st.sidebar.slider(
    'Apport actuel Pierre',
    min_value=20_000, max_value=150_000, value=100_000, step=5000
)
apport_lvo_actuel_default = int(
    select_gain_mensuel_lvo * nb_mois_depuis_que_lisa_√©conomise() - SECURITE_LISA
)
select_apport_actuel_lvo = st.sidebar.slider(
    'Apport actuel Lisa',
    min_value=20_000, max_value=150_000, value=apport_lvo_actuel_default, step=5000
)
select_w_mensuel_pde_date_achat = st.sidebar.slider(
    "Salaire mensuel net av. imp√¥t Pierre √† date d'achat",  # Hors variable !
    min_value=3000, max_value=6000,
    value=int((W_TOTAL_AVANT_IMP√îT - W_VARIABLE_AVANT_IMP√îT) / 12), step=100
)
# En sept. 2023, 3624 * 13 / 12 = 3930 de mensuel net avant imp√¥t
# En avril 2024, 3652 * 13 / 12 = 3956 de mensuel net avant imp√¥t

select_w_mensuel_lvo_date_achat = st.sidebar.slider(
    "Salaire mensuel net av. imp√¥t Lisa √† date d'achat",
    min_value=3000, max_value=6000, value=3500
)
# En 2023, 36 174¬†‚Ç¨ / 12 = 3015‚Ç¨ de mensuel net avant imp√¥t
# En 2024, (salaire brut = 46 000 * 1,07) * (PS -> 0.8) * (1 / 12) = 3280

# Les d√©pendances
lieu_to_inflation_appart, lieu_to_inflation_maison = {}, {}
for k in LIEU_TO_INFLATION_APPART.keys():
    lieu_to_inflation_appart[k] = (
        LIEU_TO_INFLATION_APPART[k] if select_avec_projection_inflation else 0
    )
    lieu_to_inflation_maison[k] = (
        LIEU_TO_INFLATION_MAISON[k] if select_avec_projection_inflation else 0
    )

ann√©es_depuis_achat = (
    (
        datetime.date.today() - DATE_D√âBUT_DU_PR√äT_EXISTANT
    ).days / 365
)

nb_mois_restants_avant_achat = round(
    (select_date_achat - datetime.date.today()).days / 30.5
)
nb_ann√©es_restantes_avant_achat = nb_mois_restants_avant_achat / 12

inflation_annuelle_cachan = get_inflation_annuelle(
    inflation_cum=lieu_to_inflation_appart['CACHAN'],
    nb_years_cum=INFLATION_SUR_NB_YEARS
)
prix_estim√©_revente = projette_prix_inflate(
    prix_initial=PRIX_APPARTEMENT_CACHAN,
    inf_annuelle_en_pct=inflation_annuelle_cachan,
    nb_years_projet√©es=nb_ann√©es_restantes_avant_achat
)

CRD = get_CRD_√†_date(
    √†_date=select_date_achat,
    date_d√©but_du_pr√™t_existant=DATE_D√âBUT_DU_PR√äT_EXISTANT,
    montant_emprunt√©=MONTANT_EMPRUNTE
)

# Source : pdf des conditions g√©n√©rales LBP
indemnit√©s_de_remb_par_anticipation = min(
    # "En cas de remboursement anticip√©, LBP percevra une indemnit√© √©gale √† un semestre d'int√©r√™ts
    # calcul√©s au taux indiqu√© dans les conditions particuli√®res sur le montant du CRD."
    144.62 * 6,
    # "Cette indemnit√© est plafonn√©e √† 3 % du capital restant d√ª avant le remboursement."
    CRD * 0.03,
)
d√ª_√†_la_banque = CRD + (
    (not select_remb_anticip√©_gratuit) * indemnit√©s_de_remb_par_anticipation
)
solde_revente = prix_estim√©_revente - d√ª_√†_la_banque

apport_qui_sera_apport√©_pde = select_apport_actuel_pde
apport_qui_sera_apport√©_pde += select_gain_mensuel_pde * nb_mois_restants_avant_achat
apport_qui_sera_apport√©_pde += solde_revente * select_avec_vente_appartement

apport_qui_sera_apport√©_lvo = select_apport_actuel_lvo
apport_qui_sera_apport√©_lvo += select_gain_mensuel_lvo * nb_mois_restants_avant_achat

montant_total_qui_sera_apport√© = apport_qui_sera_apport√©_pde + apport_qui_sera_apport√©_lvo


def calcule_mensualit√©_max_pde(
    w_mensuel_pde_date_achat=select_w_mensuel_pde_date_achat,
    prise_en_compte_du_variable=select_prise_en_compte_du_variable,
    w_variable=W_VARIABLE_AVANT_IMP√îT,
    taux_max_endettement=TAUX_MAX_ENDETTEMENT,
    prise_en_compte_participation_interessement=select_prise_en_compte_participation_interessement,
    participation_int√©ressement=PARTICIPATION_INTERESSEMENT,
    avec_vente_appartement=select_avec_vente_appartement,
    mt_rembours√©_par_mois=MONTANT_REMBOURS√â_PAR_MOIS,
    assurance_pr√™t=ASSURANCE_PR√äT
):
    """
    Si je garde mon appartement, c'est pour le mettre en location (et donc, j'aurai
    des revenus fonciers). On lit ici que les revenus fonciers sont pris en compte dans le
    calcul du taux d'endettement √† hauteur de 70% :
    https://fr.luko.eu/conseils/guide/taux-endettement-maximum/
    1200 ‚Ç¨ : le montant que je peux mettre en location, charges comprises (source SeLoger)
    Hypoth√®se pessimiste : l'√©tablissement bancaire retire les charges de copropri√©t√© de
    mes revenus fonciers dans le calcul du taux d'endettement. C'est plut√¥t rare, cf ChatGPT.
    """
    mensualit√©_max_pde = taux_max_endettement * (
        w_mensuel_pde_date_achat +
        prise_en_compte_du_variable * (w_variable / 12) +
        prise_en_compte_participation_interessement * (participation_int√©ressement / 12) +
        (not avec_vente_appartement) * (0.7 * (1200 - 250)) -
        (not avec_vente_appartement) * (mt_rembours√©_par_mois + assurance_pr√™t) -
        (not avec_vente_appartement) * 0.0295 * 1200  # assurance loyer impay√©, source Macif
    )
    return mensualit√©_max_pde


def calcule_mensualit√©_max_lvo(
        w_mensuel_lvo_date_achat=select_w_mensuel_lvo_date_achat,
        tx_max_endettement=TAUX_MAX_ENDETTEMENT
):
    mensualit√©_max_lvo = tx_max_endettement * w_mensuel_lvo_date_achat
    return mensualit√©_max_lvo


mensualit√©_max_lvo = calcule_mensualit√©_max_lvo()
mensualit√©_max_pde = calcule_mensualit√©_max_pde()
mensualit√©_maximale = mensualit√©_max_pde + mensualit√©_max_lvo

st.markdown('_Mis √† jour le 14/06/2025_')

age_lisa, age_pierre = select_date_achat.year - 1998 - 1, select_date_achat.year - 1993 - 1
st.markdown(
    f"Lisa aura {age_lisa} ans, Pierre aura {age_pierre} ans."
)

mois_depuis_achat = (ann√©es_depuis_achat * 12)
pct_rembours√© = mois_depuis_achat / 240
if select_avec_vente_appartement:
    phrase = (
        f"L'appartement de Cachan sera rembours√© √† {pct_rembours√©:.0%} "
        f"depuis {ann√©es_depuis_achat:.2} ann√©es ({int(mois_depuis_achat)} / 240 mensualit√©s) :\n"
        f"* En tenant compte d'une inflation annuelle de {inflation_annuelle_cachan:.2%} "
        f"les {INFLATION_SUR_NB_YEARS} derni√®res ann√©es, le prix de revente est estim√© "
        f"√† {sep_milliers(prix_estim√©_revente)} ‚Ç¨.\n"
        f"* Le CRD au {select_date_achat.strftime('%d/%m/%Y')} sera de {sep_milliers(CRD)} ‚Ç¨.\n"
        f"La revente de l'appartement apportera donc {sep_milliers(solde_revente)} ‚Ç¨."
    )
    st.markdown(phrase)

st.markdown(
    f'Notre apport sera de {sep_milliers(montant_total_qui_sera_apport√©)} ‚Ç¨, '
    f'dont {sep_milliers(apport_qui_sera_apport√©_lvo)} ‚Ç¨ pour Lisa '
    f'et {sep_milliers(apport_qui_sera_apport√©_pde)} ‚Ç¨ pour Pierre.'
)

mensualit√©_plafond_pde_PEL = curseur_PEL * mensualit√©_max_pde
mensualit√©_max_pde_pr√™t_principal = (1 - curseur_PEL) * mensualit√©_max_pde

if est_PEL_int√©ressant:
    (
        dur√©e_du_pr√™t_PEL, mt_pr√™t_PEL,
        mensualit√©_PEL, int√©r√™ts_acquis_utilis√©s_PEL
    ) = get_mt_max_pr√™t_PEL(
        bar√™me,
        mt_int√©r√™ts_acquis_PEL=select_mt_int√©r√™ts_acquis_pel,
        mensualit√©_plafond=mensualit√©_plafond_pde_PEL
    )

mt_pr√™t_principal_pde = get_mt_emprunt_max(
    mensualit√©_max=mensualit√©_max_pde_pr√™t_principal,
    tx_nominal=tx_nominal,
    nb_mois=select_nb_ann√©es_pr_rembourser * 12
)
mt_pr√™t_principal_lvo = get_mt_emprunt_max(
    mensualit√©_max=mensualit√©_max_lvo,
    tx_nominal=tx_nominal,
    nb_mois=select_nb_ann√©es_pr_rembourser * 12
)
mt_pr√™t_principal = mt_pr√™t_principal_pde + mt_pr√™t_principal_lvo
mt_emprunt_max = mt_pr√™t_principal + mt_pr√™t_PEL
mensualit√©s_pr√™t_principal = mensualit√©_max_pde_pr√™t_principal + mensualit√©_max_lvo

phrase = (
    'Mensualit√© maximale supportable par Lisa et Pierre : '
    f'{sep_milliers(mensualit√©_maximale)} ‚Ç¨, '
    f'dont {sep_milliers(mensualit√©_max_pde)} ‚Ç¨ pour Pierre et '
    f'{sep_milliers(mensualit√©_max_lvo)} ‚Ç¨ pour Lisa.\n'
    f'Cette mensualit√©, adoss√©e √† un taux nominal de {tx_nominal:.2%}, '
    f"permet d'emprunter au maximum {sep_milliers(mt_emprunt_max)} ‚Ç¨ "
    f'sur {select_nb_ann√©es_pr_rembourser} ans.'
)
st.markdown(phrase)

if est_PEL_int√©ressant:
    st.markdown(
        phrase +
        f'\n* {sep_milliers(mt_pr√™t_PEL)} ‚Ç¨ '
        f'avec le PEL (sur {dur√©e_du_pr√™t_PEL} ans, '
        f'avec des mensualit√©s de {mensualit√©_PEL} ‚Ç¨ et en utilisant '
        f"{sep_milliers(int√©r√™ts_acquis_utilis√©s_PEL)} ‚Ç¨ d'int√©r√™ts acquis)"
        f'\n* {sep_milliers(mt_pr√™t_principal)} ‚Ç¨ '
        f'avec le pr√™t principal (sur {select_nb_ann√©es_pr_rembourser} ans '
        f'avec des mensualit√©s de {sep_milliers(mensualit√©s_pr√™t_principal)} ‚Ç¨)'
    )

budget = montant_total_qui_sera_apport√© + mt_emprunt_max

st.markdown(f"Notre budget total d'achat sera donc de {sep_milliers(budget)} ‚Ç¨.")

st.markdown("Attention, il faut prendre en compte :")
lieu_to_inflation = (
    lieu_to_inflation_appart if select_appart_ou_maison == 'Appartement'
    else lieu_to_inflation_maison
)
inflation_par_an_les_x_derni√®res_ann√©es = get_inflation_annuelle(
    inflation_cum=lieu_to_inflation[select_ville],
    nb_years_cum=INFLATION_SUR_NB_YEARS
)
inflation_temps_restant_avant_achat = (
    (1 + inflation_par_an_les_x_derni√®res_ann√©es) ** nb_ann√©es_restantes_avant_achat
)
budget = round(budget / inflation_temps_restant_avant_achat)
url_meilleurs_agents = lieu_to_url_meilleurs_agents[select_ville]
st.markdown(
    f"* [L'inflation](https://www.meilleursagents.com/prix-immobilier/{url_meilleurs_agents}/)"
    f' ({lieu_to_inflation[select_ville]:.2%} en {INFLATION_SUR_NB_YEARS} ans √† {select_ville}, '
    f'soit {inflation_par_an_les_x_derni√®res_ann√©es:.2%} par an, '
    f"soit {inflation_temps_restant_avant_achat - 1:.2%} d'ici les "
    f"{nb_ann√©es_restantes_avant_achat:.0f} ans avant l'achat) : reste {sep_milliers(budget)} ‚Ç¨"
)

co√ªt_cr√©dit_principal = (
    mensualit√©s_pr√™t_principal * 12 * select_nb_ann√©es_pr_rembourser - mt_pr√™t_principal
)
co√ªt_cr√©dit_PEL = mensualit√©_PEL * 12 * dur√©e_du_pr√™t_PEL - mt_pr√™t_PEL
co√ªt_cr√©dit = co√ªt_cr√©dit_principal + co√ªt_cr√©dit_PEL
budget -= co√ªt_cr√©dit
if select_avec_cr√©dit_BNP:
    prefix = (
        "* [Le co√ªt du cr√©dit ]"
        "(https://www.meilleurtaux.com/credit-immobilier/barometre-des-taux.html)"
    )
else:
    prefix = '* Le co√ªt du cr√©dit '
st.markdown(
    prefix + f"(hors assurance) : {sep_milliers(co√ªt_cr√©dit)} ‚Ç¨, "
    f"reste {sep_milliers(budget)} ‚Ç¨. D√©tail :\n"
    f"\t - {sep_milliers(co√ªt_cr√©dit_principal)} ‚Ç¨ "
    "d'int√©r√™ts √† rembourser au titre du cr√©dit principal\n"
    f"\t - {sep_milliers(co√ªt_cr√©dit_PEL)} ‚Ç¨ "
    "d'int√©r√™ts √† rembourser au titre du cr√©dit PEL"
)

# mensualit√© d'assurance / mensualit√© du cr√©dit
tx_assurance_actuelle = 16.07 / MONTANT_REMBOURS√â_PAR_MOIS
co√ªt_assurance = tx_assurance_actuelle * mt_emprunt_max
budget -= co√ªt_assurance
st.markdown(f"* Le co√ªt de l'assurance emprunteur : reste {sep_milliers(budget)} ‚Ç¨")

frais_de_notaire = 0.075 if select_neuf_ancien == 'Ancien' else 0.03
frais_de_notaire *= budget
budget -= frais_de_notaire
st.markdown(f"* Les frais de notaire : reste {sep_milliers(budget)} ‚Ç¨")

if select_avec_vente_appartement:
    budget -= (select_tx_frais_agence * prix_estim√©_revente)
    st.markdown(
        "* Les [frais d'agence]"
        "(https://www.human-immobilier.fr/content/pdf/bareme_honoraires_human_immobilier.pdf) "
        "sur la revente de l'appartement de Cachan : "
        f'reste {sep_milliers(budget)} ‚Ç¨'
    )

if not select_remb_anticip√©_gratuit:
    budget -= indemnit√©s_de_remb_par_anticipation
    st.markdown(
        "* Les indemnit√©s de remboursement par anticipation : "
        f'reste {sep_milliers(budget)} ‚Ç¨'
    )

budget -= 1000
st.markdown(f'* Les frais de dossier bancaire : reste {sep_milliers(budget)} ‚Ç¨')

st.markdown(f'**‚ûú Soit un prix final maximum de : {sep_milliers(budget)} ‚Ç¨**')
st.markdown('-' * 3)


st.markdown(
    'Pour √™tre exhaustive, cette simulation devrait aussi tenir compte '
    'des gros impacts sur nos finances :\n'
    '* un enfant, un mariage, des voyages, etc.\n'
    '* un h√©ritage, une donation, les JO 2024, etc.'
)
st.markdown(
    f'Une marge de s√©curit√© est conserv√©e par Lisa √† hauteur de {sep_milliers(SECURITE_LISA)} ‚Ç¨.'
)

st.markdown(
    f"""
    Cette simulation ne tient pas compte :
    * des 30 % de r√©duction sur l'assurance emprunteur,
    * des √©ventuels frais de courtage,
    * des √©ventuels frais de tenue de compte en cas d'ouverture de compte dans une banque,
    * des √©ventuels frais de garanties (hypoth√®que ou cautionnement),
    * d'une √©ventuelle ren√©gociation de taux ult√©rieure,
    * de l'[imp√¥t sur la plus-value immobili√®re](https://www.service-public.fr/particuliers/vosdroits/F10864) en cas d'achat d'une r√©sidence secondaire (TODO)

    Hypoth√®ses prises :
    * Pour pr√©dire l'inflation, on a estim√© l'inflation moyenne dans la ville
    sur les {INFLATION_SUR_NB_YEARS} derni√®res ann√©es, et projet√© ce taux d'inflation sur le temps restant avant achat.
    * En cas de revente de l'appartement cachanais, on suppose que la vente a lieu en m√™me temps que
    l'achat du futur logement.
    """
)

# TODO :
# refactoring
# vf que pour un euro d'emprunt suppl√©mentaire, √ßa passe plus (mensualit√© > mensualit√© max)
# compte √† terme : https://placement.meilleurtaux.com/assurance-vie/actualites/2024-avril/voici-le-meilleur-compte-a-terme-en-2024.html
# Y a-t-il une assurance du PEL ?
